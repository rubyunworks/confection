= Confection

{Homepage}[http://rubyworks.github.com/confection] |
{Source Code}[http://github.com/rubyworks/confection] |
{Mailing List}[http://googlegroups.com/group/rubyworks-mailinglist]

{<img src="http://travis-ci.org/rubyworks/confection.png" />}[http://travis-ci.org/rubyworks/confection]


== Description

Confection is multi-tenant configuration system for Ruby projects. If was 
designed to facilitate Ruby-based configuration for multiple tools in a
single file. It is extremely simple, which makes it easy to understand
and flexible in use.


== Synopsis

Create a file in you project called `config.rb`. In it, add configuration blocks
by name. As an example let's demonstrate how we could use this for Rake tasks.

  $ cat config.rb
  rake do
    desc 'generate yard docs'
    task :yard do
      sh 'yard'
    end
  end

In our Rakefile:

  $ cat Rakefile
  require 'confection'
  confection(:rake).call

Now you might wonder why the heck you would do this. That's where the *multi-tenancy*
comes into play. Let's add another configuration, and this time for a tool that has
native support for Confection.

  $ cat config.rb
  title = "myapp"

  rake do
    desc 'generate yard docs'
    task :yard do
      sh "yard doc --title #{title}"
    end
  end

  qed do |config|
    config.title = "#{title} Demonstrandum"
  end

Now we have configuration for both the rake tool and the qed test tool in
a single file. Thus we gain the advantage of reducing the file count of our 
project while pulling our tool configurations together into one place.
Moreover, these configurations can potentially share settings as demonstrated
here via the `title` variable.

Using Confection in your libraries is very simple. As you can see from our
example Rakefile. The `#confection` method is used to get a handle on a named
configuration. With it you have two options, `#call` or `#exec`. The first
evaluates the configuration block at the toplevel, while the later evaluates
the block in the context of the caller.


== Release Notes

Please see HISTORY.rdoc file.


== Copyrights

Copyright (c) 2011 Rubyworks

Confection is distributable in accordance with the terms of the BSD-2-Clause license.

See COPYING.rdoc for details.

